@inject IServicoProduto ServicoProduto

<div class="container-cards">
    @for (int i = 0; i < ServicoProduto.Leiloes.Count; i += 3)
    {
            <div class="row">
            @for (int j = i; j < i + 3 && j < ServicoProduto.Leiloes.Count; j++)
            {
                var product = ServicoProduto.Leiloes[j];
                        <div class="col-md-4">
                            <li class="card my-3">
                                <div class="card-img-wrapper">
                                    <a href="/produtoadmin/@product.CodLeilao">
                                        <img class="card-img" src="@product.Images.ElementAt(0)" alt="@product.Name" />
                                    </a>
                                </div>
                                <div class="card-text">
                                    <a href="/produto/@product.CodLeilao">
                                        <h4 class="mb-0">@product.Name</h4>
                                    </a>
                                    <p>Entrada: @product.EntryPrice €</p>
                                    <p>Tempo Restante: @product.Location</p>
                                    <p>Estado: @product.Estado</p>
                                </div>
                            </li>
                        </div>
            }
            </div>
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ServicoProduto.loadLeiloes();
    }
}
