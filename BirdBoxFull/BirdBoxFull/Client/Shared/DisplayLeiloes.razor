@inject IServicoProduto ServicoProduto
@inject ILocalStorageService LocalStorage



<ul class="list-unstyled card-container">
    @foreach (var product in l)
    {
        if (!product.Estado.Equals("Terminado"))
        {
                    <li class="card my-3">
                        <div class="card-img-wrapper">
                            <a href="/produto/@product.CodLeilao">
                                <img class="card-img" src="@product.Images.ElementAt(0)" alt="@product.Name" />
                            </a>
                        </div>
                        <div class="card-text">
                            <a href="/produto/@product.CodLeilao">
                                <h4>@product.Name</h4>
                            </a>
                            <p>Entrada: @product.EntryPrice €</p>
                            <p>Localização: @product.Location</p>

                    @if (product.Estado.Equals("aDecorrer"))
                    {
                                    <p>A decorrer</p>
                    }
                    else if (product.Estado.Equals("aProcessar"))
                    {
                                    <p>A ser processado</p>
                    }
                    else if (product.Estado.Equals("aValidar"))
                    {
                                    <p>A ser validado</p>
                    }
                    
                        </div>
                    </li>
        }
    }
</ul>



@code {

    [Parameter]
    public string Username { get; set; }

    List<Leilao> l { get; set; } = new List<Leilao>();


    protected override async Task OnInitializedAsync()
    {

        Username = await LocalStorage.GetItemAsync<string>("username") ?? string.Empty;
        l = await ServicoProduto.GetLeilaoByUser(Username);
    }
}